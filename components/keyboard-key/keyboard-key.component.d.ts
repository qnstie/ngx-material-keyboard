import { ElementRef, EventEmitter, OnInit } from '@angular/core';
import { MatInput } from '@angular/material/input';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import { KeyboardClassKey } from '../../enums/keyboard-class-key.enum';
export declare const VALUE_NEWLINE = "\n\r";
export declare const VALUE_SPACE = " ";
export declare const VALUE_TAB = "\t";
export declare class MatKeyboardKeyComponent implements OnInit {
    private _deadkeys;
    private _icons;
    private _deadkeyKeys;
    private _iconKeys;
    active$: BehaviorSubject<boolean>;
    pressed$: BehaviorSubject<boolean>;
    key: string | KeyboardClassKey;
    active: boolean;
    pressed: boolean;
    input?: ElementRef;
    control?: MatInput;
    enterClick: EventEmitter<void>;
    capsClick: EventEmitter<void>;
    altClick: EventEmitter<void>;
    shiftClick: EventEmitter<void>;
    readonly lowerKey: string;
    readonly charCode: number;
    readonly isClassKey: boolean;
    readonly isDeadKey: boolean;
    readonly hasIcon: boolean;
    readonly icon: string;
    readonly cssClass: string;
    inputValue: string;
    constructor(_deadkeys: any, _icons: any);
    ngOnInit(): void;
    onClick(): void;
    private _triggerKeyEvent();
    private _getCursorPosition();
    private _setCursorPosition(position);
    private _isTextarea();
}
